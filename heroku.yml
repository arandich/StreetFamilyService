build:
  reverse-proxy:
    image: traefik:v2.2
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  docker:
    web: ./api_app
    target: builder
    image: api_app
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.account.rule=Host(`street.test`) && PathPrefix(`/api/`)"
    environment:
      - ENV=dev
    volumes:
      - ./api_app:/go/src/app
    command: reflex -r '\.go$$' -s -- sh -c 'go run ./'
    env_file: .env.dev
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_DB=golang_postgres
    ports:
      - '6500:5432'
    volumes:
      - progresDB:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d golang_postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    env_file:
      - .env.dev
volumes:
  progresDB: